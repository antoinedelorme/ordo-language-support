{
  entryPoint: pipelineLibrary.COMPUTE,
  rebalancingDate: orchestrator.getCurrentDate(),

  pipelineLibrary: {
    MONTHLY_EQUAL_WEIGHT: {
      observationTime: rebalancingDate,
      universe: data_loader.getUniverseFromTickers([AAPL, GOOGLE]),
      enrichedUniverse: data_loader.getStatistics(universe, [Price]),
      targetAllocation: compute_engine.getEqualWeight(enrichedUniverse)      
    },

    BACKTEST: {
      observationTime: rebalancingDate,
      observationDates: getSchedule(2020-01-01, observationTime, monthly),
      rebalancingResults: orchestrator.generateParallelTask(observationDates, MONTHLY_EQUAL_WEIGHT)
    },

    COMPUTE: {
      backtestResults: pipelineLibrary.BACKTEST.rebalancingResults,
      performanceMetrics: compute_engine.calculatePerformance(backtestResults),
      report: orchestrator.finalizeReport(performanceMetrics)
    }
  }
}
