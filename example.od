pipeline: [
  {
    // BACK_TESTING Task
    phase1: {
      marketData: data_loader.loadMarketData("SP500", "2020-01-01 to 2023-01-01"),
      allocationSeries: compute_engine.generateAllocationSeries(
        REBALANCING("SP500"),
        "2020-01-01 to 2023-01-01",
        "Monthly"
      ),
      backtestResults: compute_engine.backtest(
        allocationSeries,
        marketData
      )
    }
  },
  {
    // Time Series Operations and Analysis
    phase2: {
      returnsSeries: backtestResults.pctChange(),
      cumulativeReturns: returnsSeries.cumsum(),
      averageReturn: returnsSeries.mean(),
      riskMetricsSeries: allocationSeries.apply(RiskAnalysis.computeRiskMetrics),
      performancePlot: plotter.plotPerformance(cumulativeReturns),
      riskPlot: plotter.plotRiskMetrics(riskMetricsSeries)
    }
  }
]
